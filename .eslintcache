[{"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\index.tsx":"1","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\pages\\App\\index.tsx":"2","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\styles\\globalstyles.tsx":"3","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\styles\\theme.tsx":"4","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\modules\\index.tsx":"5","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\modules\\rootReducer.tsx":"6","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\atoms\\Input\\index.tsx":"7","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\atoms\\Button\\index.tsx":"8","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\modules\\people.tsx":"9","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\utils\\api.tsx":"10","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\pages\\AsideBoard\\index.tsx":"11","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\molecules\\NameInputForm\\index.tsx":"12","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\templates\\NameList\\index.tsx":"13","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\atoms\\Card\\index.tsx":"14","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\styles\\mixin.tsx":"15","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\molecules\\GroupingForm\\index.tsx":"16","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\utils\\getRandomGroupList.tsx":"17","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\utils\\getRandomInt.tsx":"18","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\molecules\\List\\index.tsx":"19","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\pages\\ResultPage\\index.tsx":"20","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\templates\\GroupList\\index.tsx":"21"},{"size":597,"mtime":1613048122419,"results":"22","hashOfConfig":"23"},{"size":739,"mtime":1613145935938,"results":"24","hashOfConfig":"23"},{"size":795,"mtime":1613052874710,"results":"25","hashOfConfig":"23"},{"size":733,"mtime":1613058892698,"results":"26","hashOfConfig":"23"},{"size":555,"mtime":1612968299239,"results":"27","hashOfConfig":"23"},{"size":232,"mtime":1613032599754,"results":"28","hashOfConfig":"23"},{"size":690,"mtime":1613141700500,"results":"29","hashOfConfig":"23"},{"size":771,"mtime":1613061625358,"results":"30","hashOfConfig":"23"},{"size":3312,"mtime":1613144494076,"results":"31","hashOfConfig":"23"},{"size":1118,"mtime":1613043491096,"results":"32","hashOfConfig":"23"},{"size":1059,"mtime":1613048171943,"results":"33","hashOfConfig":"23"},{"size":1478,"mtime":1613122693079,"results":"34","hashOfConfig":"23"},{"size":1285,"mtime":1613135552835,"results":"35","hashOfConfig":"23"},{"size":800,"mtime":1613137988974,"results":"36","hashOfConfig":"23"},{"size":373,"mtime":1612971502586,"results":"37","hashOfConfig":"23"},{"size":3089,"mtime":1613146801546,"results":"38","hashOfConfig":"23"},{"size":1251,"mtime":1613134472896,"results":"39","hashOfConfig":"23"},{"size":173,"mtime":1613111602041,"results":"40","hashOfConfig":"23"},{"size":618,"mtime":1613143147341,"results":"41","hashOfConfig":"23"},{"size":1506,"mtime":1613145966973,"results":"42","hashOfConfig":"23"},{"size":772,"mtime":1613146811757,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"177gih1",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\index.tsx",[],[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\pages\\App\\index.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\styles\\globalstyles.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\styles\\theme.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\modules\\index.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\modules\\rootReducer.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\atoms\\Input\\index.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\atoms\\Button\\index.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\modules\\people.tsx",["93","94","95","96","97","98","99"],"import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport * as api from '../utils/api';\nimport { Person } from '../types';\n\ninterface GroupingInputValues {\n  groupSize: number;\n  minMemberSize: number;\n}\n\ninterface PeopleInitState {\n  people: Person[];\n  loading: string;\n  groupingInputValues: GroupingInputValues;\n  randomGroupList: number[][];\n  error: Error | null;\n}\n\nconst initialState: PeopleInitState = {\n  people: [],\n  loading: 'idle',\n  groupingInputValues: {\n    groupSize: 0,\n    minMemberSize: 0\n  },\n  randomGroupList: [],\n  error: null,\n};\n\nexport const getPeople = createAsyncThunk(\n  'people/getPeople',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await api.getPeople();\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const createPerson = createAsyncThunk(\n  'people/createPerson',\n  async (name: string, { rejectWithValue }) => {\n    try {\n      const { data } = await api.createPerson(name);\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deletePerson = createAsyncThunk(\n  'people/deletePerson',\n  async (id: string, { rejectWithValue }) => {\n    try {\n      const { data } = await api.deletePerson(id);\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst peopleSlice = createSlice({\n  name: 'people',\n  initialState,\n  reducers: {\n    setGroupingInputValues: (state, action) => {\n      state.groupingInputValues = action.payload;\n    },\n    setRandomGroupList: (state, action) => {\n      state.randomGroupList = action.payload;\n    },\n  },\n  extraReducers: builder => {\n    builder.addCase(getPeople.pending, (state, { payload }) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n      }\n    });\n    builder.addCase(getPeople.fulfilled, (state, { payload }: PayloadAction<Person[]>) => {\n      state.loading = 'idle';\n      state.people = payload;\n    });\n    builder.addCase(getPeople.rejected, (state, { payload }) => {\n      state.loading = 'idle';\n      state.error = Error('get people failed');\n    });\n    builder.addCase(createPerson.pending, (state, { payload }) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n      }\n    });\n    builder.addCase(createPerson.fulfilled, (state, { payload }: PayloadAction<Person>) => {\n      state.loading = 'idle';\n      state.people.push(payload);\n    });\n    builder.addCase(createPerson.rejected, (state, { payload }) => {\n      state.loading = 'idle';\n      state.error = Error('create person failed');\n    });\n    builder.addCase(deletePerson.pending, (state, { payload }) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n      }\n    });\n    builder.addCase(deletePerson.fulfilled, (state, { payload }: PayloadAction<Person>) => {\n      state.loading = 'idle';\n      state.people = state.people.filter(person => person._id !== payload._id);\n    });\n    builder.addCase(deletePerson.rejected, (state, { payload }) => {\n      state.loading = 'idle';\n      state.error = Error('delete person failed');\n    });\n  },\n});\n\nexport const { setGroupingInputValues, setRandomGroupList } = peopleSlice.actions;\nexport default peopleSlice.reducer;\n","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\utils\\api.tsx",["100","101","102"],"const CROSS_ORIGIN_URL = 'http://localhost:2021';\r\n\r\nexport const getPeople = async () => {\r\n  try {\r\n    const response = await fetch(`${CROSS_ORIGIN_URL}/api/people`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\nexport const createPerson = async (name: string) => {\r\n  try {\r\n    const response = await fetch(`${CROSS_ORIGIN_URL}/api/person`, {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name }),\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\nexport const deletePerson = async (id: string) => {\r\n  try {\r\n    const response = await fetch(`${CROSS_ORIGIN_URL}/api/person`, {\r\n      method: 'delete',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ id }),\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\pages\\AsideBoard\\index.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\molecules\\NameInputForm\\index.tsx",["103"],"import React, { useState, ChangeEvent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Button from '../../atoms/Button';\r\nimport Input from '../../atoms/Input';\r\nimport { createPerson } from '../../../modules/people';\r\nimport { flexColumnCenter } from '../../../styles/mixin';\r\nimport { RootState } from '../../../modules/rootReducer';\r\n\r\nconst NameInputForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const { people } = useSelector((state: RootState) => state.people);\r\n\r\n  const handleNameInput = ({ target }: ChangeEvent<HTMLInputElement>): void => {\r\n    setName(target.value);\r\n  };\r\n\r\n  const handleAddNameButton = async () => {\r\n    if (people.find(person => person.name === name)) {\r\n     alert('중복된 이름입니다.');\r\n     setName('');\r\n     return;\r\n    }\r\n    dispatch(createPerson(name));\r\n    setName('');\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h2>Add person!😋</h2>\r\n        <Input\r\n          className='name-input'\r\n          name='name'\r\n          value={name}\r\n          placeholder='Enter member name!'\r\n          onChange={handleNameInput}\r\n        />\r\n        <Button\r\n          className='add-button'\r\n          title='추가'\r\n          onClick={handleAddNameButton}\r\n        />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  ${flexColumnCenter}\r\n\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport default NameInputForm;\r\n","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\templates\\NameList\\index.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\atoms\\Card\\index.tsx",["104"],"import React, { ReactElement } from 'react';\r\nimport styled from 'styled-components';\r\nimport { flexColumnCenter } from '../../../styles/mixin';\r\n\r\ninterface CardProps {\r\n  className: string;\r\n  children: any;\r\n}\r\n\r\nconst Card: React.FC<CardProps> = ({\r\n  className,\r\n  children,\r\n}): ReactElement => {\r\n  return (\r\n    <StyledCard\r\n      className={className}\r\n    >\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nconst StyledCard = styled.div`\r\n  ${flexColumnCenter};\r\n\r\n  width: 120px;\r\n  height: 80px;\r\n  margin-bottom: 12px;\r\n  margin-right: 12px;\r\n  box-shadow: ${({ theme }) => theme.boxShadow.deep};\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  background-color: ${({ theme }) => theme.color.navy};\r\n  color: ${({ theme }) => theme.color.white};\r\n`;\r\n\r\nexport default Card;\r\n","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\styles\\mixin.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\molecules\\GroupingForm\\index.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\utils\\getRandomGroupList.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\utils\\getRandomInt.tsx",["105"],"export const getRandomInt = (min: number, max: number) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\molecules\\List\\index.tsx",["106"],"import React, { ReactElement } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ListProps {\r\n  title: string;\r\n  data?: [];\r\n  children?: any;\r\n}\r\n\r\nconst List: React.FC<ListProps> = ({\r\n  title,\r\n  data = [],\r\n  children,\r\n}): ReactElement => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      <Wrapper>\r\n        {data.map((item, index) =>\r\n          <li key={index}>{item}</li>,\r\n        )}\r\n        {children}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  margin-left: 16px;\r\n`;\r\n\r\nexport default List;\r\n","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\pages\\ResultPage\\index.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\templates\\GroupList\\index.tsx",["107"],{"ruleId":"108","severity":1,"message":"109","line":23,"column":21,"nodeType":"110","messageId":"111","endLine":24,"endColumn":1,"fix":"112"},{"ruleId":"113","severity":1,"message":"114","line":80,"column":50,"nodeType":"115","messageId":"116","endLine":80,"endColumn":57},{"ruleId":"113","severity":1,"message":"114","line":89,"column":51,"nodeType":"115","messageId":"116","endLine":89,"endColumn":58},{"ruleId":"113","severity":1,"message":"114","line":93,"column":53,"nodeType":"115","messageId":"116","endLine":93,"endColumn":60},{"ruleId":"113","severity":1,"message":"114","line":102,"column":54,"nodeType":"115","messageId":"116","endLine":102,"endColumn":61},{"ruleId":"113","severity":1,"message":"114","line":106,"column":53,"nodeType":"115","messageId":"116","endLine":106,"endColumn":60},{"ruleId":"113","severity":1,"message":"114","line":115,"column":54,"nodeType":"115","messageId":"116","endLine":115,"endColumn":61},{"ruleId":"117","severity":1,"message":"118","line":3,"column":26,"nodeType":"119","messageId":"120","endLine":3,"endColumn":37},{"ruleId":"117","severity":1,"message":"118","line":17,"column":29,"nodeType":"119","messageId":"120","endLine":17,"endColumn":52},{"ruleId":"117","severity":1,"message":"118","line":33,"column":29,"nodeType":"119","messageId":"120","endLine":33,"endColumn":50},{"ruleId":"117","severity":1,"message":"118","line":10,"column":23,"nodeType":"119","messageId":"120","endLine":10,"endColumn":28},{"ruleId":"121","severity":1,"message":"122","line":7,"column":13,"nodeType":"123","messageId":"124","endLine":7,"endColumn":16,"suggestions":"125"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":29,"nodeType":"119","messageId":"120","endLine":1,"endColumn":58},{"ruleId":"121","severity":1,"message":"122","line":7,"column":14,"nodeType":"123","messageId":"124","endLine":7,"endColumn":17,"suggestions":"126"},{"ruleId":"108","severity":1,"message":"109","line":11,"column":7,"nodeType":"110","messageId":"111","endLine":12,"endColumn":1,"fix":"127"},"comma-dangle","Missing trailing comma.","Property","missing",{"range":"128","text":"129"},"@typescript-eslint/no-unused-vars","'payload' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["130","131"],["132","133"],{"range":"134","text":"129"},[539,539],",",{"messageId":"135","fix":"136","desc":"137"},{"messageId":"138","fix":"139","desc":"140"},{"messageId":"135","fix":"141","desc":"137"},{"messageId":"138","fix":"142","desc":"140"},[315,315],"suggestUnknown",{"range":"143","text":"144"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"143","text":"145"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"146","text":"144"},{"range":"146","text":"145"},[205,208],"unknown","never",[157,160]]