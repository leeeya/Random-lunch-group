[{"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\index.tsx":"1","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\pages\\App\\index.tsx":"2","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\styles\\globalstyles.tsx":"3","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\styles\\theme.tsx":"4","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\modules\\index.tsx":"5","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\modules\\rootReducer.tsx":"6","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\atoms\\Input\\index.tsx":"7","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\atoms\\Button\\index.tsx":"8","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\modules\\people.tsx":"9","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\utils\\api.tsx":"10","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\pages\\AsideBoard\\index.tsx":"11","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\molecules\\NameInputForm\\index.tsx":"12","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\templates\\NameList\\index.tsx":"13","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\atoms\\Card\\index.tsx":"14","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\styles\\mixin.tsx":"15"},{"size":596,"mtime":1613040725675,"results":"16","hashOfConfig":"17"},{"size":629,"mtime":1613023229316,"results":"18","hashOfConfig":"17"},{"size":766,"mtime":1613045238413,"results":"19","hashOfConfig":"17"},{"size":733,"mtime":1613040206781,"results":"20","hashOfConfig":"17"},{"size":555,"mtime":1612968299239,"results":"21","hashOfConfig":"17"},{"size":232,"mtime":1613032599754,"results":"22","hashOfConfig":"17"},{"size":590,"mtime":1613033901581,"results":"23","hashOfConfig":"17"},{"size":727,"mtime":1613043303758,"results":"24","hashOfConfig":"17"},{"size":2773,"mtime":1613044173465,"results":"25","hashOfConfig":"17"},{"size":1118,"mtime":1613043491096,"results":"26","hashOfConfig":"17"},{"size":904,"mtime":1613045155093,"results":"27","hashOfConfig":"17"},{"size":1150,"mtime":1613045216291,"results":"28","hashOfConfig":"17"},{"size":1185,"mtime":1613044970003,"results":"29","hashOfConfig":"17"},{"size":800,"mtime":1613043032031,"results":"30","hashOfConfig":"17"},{"size":373,"mtime":1612971502586,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"177gih1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\index.tsx",[],[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\pages\\App\\index.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\styles\\globalstyles.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\styles\\theme.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\modules\\index.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\modules\\rootReducer.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\atoms\\Input\\index.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\atoms\\Button\\index.tsx",[],"C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\modules\\people.tsx",["69","70","71","72","73","74","75"],"import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport * as api from '../utils/api';\nimport { Person } from '../types';\n\ninterface PeopleInitState {\n  people: Person[];\n  loading: string;\n  error: Error | null;\n}\n\nconst initialState: PeopleInitState = {\n  people: [],\n  loading: 'idle',\n  error: null,\n};\n\nexport const getPeople = createAsyncThunk(\n  'people/getPeople',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await api.getPeople();\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const createPerson = createAsyncThunk(\n  'people/createPerson',\n  async (name: string, { rejectWithValue }) => {\n    try {\n      const { data } = await api.createPerson(name);\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deletePerson = createAsyncThunk(\n  'people/deletePerson',\n  async (id: string, { rejectWithValue }) => {\n    try {\n      const { data } = await api.deletePerson(id);\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst peopleSlice = createSlice({\n  name: 'people',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getPeople.fulfilled, (state, { payload }: PayloadAction<Person[]>) => {\n      state.loading = 'idle';\n      state.people = payload;\n    });\n    builder.addCase(getPeople.rejected, (state, { payload }) => {\n      state.loading = 'idle';\n      state.error = Error('get people failed');\n    });\n    builder.addCase(getPeople.pending, (state, { payload }) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n      }\n    });\n    builder.addCase(createPerson.pending, (state, { payload }) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n      }\n    });\n    builder.addCase(createPerson.fulfilled, (state, { payload }: PayloadAction<Person>) => {\n      state.loading = 'idle';\n      state.people.push(payload);\n    });\n    builder.addCase(createPerson.rejected, (state, { payload }) => {\n      state.loading = 'idle';\n      state.error = Error('create person failed');\n    });\n    builder.addCase(deletePerson.pending, (state, { payload }) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n      }\n    });\n    builder.addCase(deletePerson.fulfilled, (state, { payload }: PayloadAction<Person>) => {\n      state.loading = 'idle';\n      state.people = state.people.filter(person => person._id !== payload._id);\n    });\n    builder.addCase(deletePerson.rejected, (state, { payload }) => {\n      state.loading = 'idle';\n      state.error = Error('delete person failed');\n    });\n  }\n});\n\nexport default peopleSlice.reducer;\n","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\utils\\api.tsx",["76","77","78"],"const CROSS_ORIGIN_URL = 'http://localhost:2021';\r\n\r\nexport const getPeople = async () => {\r\n  try {\r\n    const response = await fetch(`${CROSS_ORIGIN_URL}/api/people`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\nexport const createPerson = async (name: string) => {\r\n  try {\r\n    const response = await fetch(`${CROSS_ORIGIN_URL}/api/person`, {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name }),\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\nexport const deletePerson = async (id: string) => {\r\n  try {\r\n    const response = await fetch(`${CROSS_ORIGIN_URL}/api/person`, {\r\n      method: 'delete',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ id }),\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\pages\\AsideBoard\\index.tsx",["79","80","81","82","83","84"],"import React, { ChangeEvent, ReactElement, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../modules/rootReducer';\r\nimport styled from 'styled-components';\r\nimport { flexColumnCenter } from '../../styles/mixin';\r\nimport NameInputForm from '../../components/molecules/NameInputForm';\r\nimport NameList from '../../components/templates/NameList';\r\nimport { getPeople } from '../../modules/people';\r\n\r\nconst AsideBoard: React.FC = (): ReactElement => {\r\n  const dispatch = useDispatch();\r\n  const { people, error } = useSelector((state: RootState) => state.people);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPeople());\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <NameInputForm />\r\n      <NameList data={people} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  ${flexColumnCenter}\r\n`;\r\n\r\nexport default AsideBoard;\r\n","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\molecules\\NameInputForm\\index.tsx",["85"],"import React, { useState, ChangeEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Button from '../../atoms/Button';\r\nimport Input from '../../atoms/Input';\r\nimport { createPerson } from '../../../modules/people';\r\nimport { flexColumnCenter } from '../../../styles/mixin';\r\n\r\nconst NameInputForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n\r\n  const handleNameInput = ({ target }: ChangeEvent<HTMLInputElement>): void => {\r\n    setName(target.value);\r\n  };\r\n\r\n  const handleNameButton = async () => {\r\n    dispatch(createPerson(name));\r\n    setName('');\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h2>Add person!😋</h2>\r\n      <div>\r\n        <Input\r\n          className='name-input'\r\n          value={name}\r\n          onChange={handleNameInput}\r\n        />\r\n        <Button\r\n          className='add-button'\r\n          title='추가'\r\n          onClick={handleNameButton}\r\n        />\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  ${flexColumnCenter}\r\n\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport default NameInputForm;\r\n","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\templates\\NameList\\index.tsx",["86"],"import React, { ReactElement } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Person } from '../../../types';\r\nimport { deletePerson } from '../../../modules/people';\r\nimport Card from '../../../components/atoms/Card';\r\nimport Button from '../../../components/atoms/Button';\r\n\r\ninterface NameListProps {\r\n  data: Person[];\r\n}\r\n\r\nconst NameList: React.FC<NameListProps> = ({\r\n  data,\r\n}): ReactElement => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteButton = async (id: string) => {\r\n    dispatch(deletePerson(id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>lunch people</h3>\r\n      <Wrapper>\r\n        {data.map(person =>\r\n          <Card\r\n            key={person._id}\r\n            className='name-card'\r\n          >\r\n            {person.name}\r\n            <Button\r\n              className='delete-button'\r\n              title='삭제'\r\n              onClick={() => handleDeleteButton(person._id)}\r\n            />\r\n          </Card>\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport default NameList;\r\n","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\components\\atoms\\Card\\index.tsx",["87"],"import React, { ReactElement } from 'react';\r\nimport styled from 'styled-components';\r\nimport { flexColumnCenter } from '../../../styles/mixin';\r\n\r\ninterface CardProps {\r\n  className: string;\r\n  children: any;\r\n}\r\n\r\nconst Card: React.FC<CardProps> = ({\r\n  className,\r\n  children,\r\n}): ReactElement => {\r\n  return (\r\n    <StyledCard\r\n      className={className}\r\n    >\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nconst StyledCard = styled.div`\r\n  ${flexColumnCenter};\r\n\r\n  width: 120px;\r\n  height: 80px;\r\n  margin-bottom: 12px;\r\n  margin-right: 12px;\r\n  box-shadow: ${({ theme }) => theme.boxShadow.deep};\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  background-color: ${({ theme }) => theme.color.navy};\r\n  color: ${({ theme }) => theme.color.white};\r\n`;\r\n\r\nexport default Card;\r\n","C:\\Users\\leeey\\Desktop\\mini-project-lunch\\mini-project-master\\lunch\\src\\styles\\mixin.tsx",[],{"ruleId":"88","severity":1,"message":"89","line":65,"column":51,"nodeType":"90","messageId":"91","endLine":65,"endColumn":58},{"ruleId":"88","severity":1,"message":"89","line":69,"column":50,"nodeType":"90","messageId":"91","endLine":69,"endColumn":57},{"ruleId":"88","severity":1,"message":"89","line":74,"column":53,"nodeType":"90","messageId":"91","endLine":74,"endColumn":60},{"ruleId":"88","severity":1,"message":"89","line":83,"column":54,"nodeType":"90","messageId":"91","endLine":83,"endColumn":61},{"ruleId":"88","severity":1,"message":"89","line":87,"column":53,"nodeType":"90","messageId":"91","endLine":87,"endColumn":60},{"ruleId":"88","severity":1,"message":"89","line":96,"column":54,"nodeType":"90","messageId":"91","endLine":96,"endColumn":61},{"ruleId":"92","severity":1,"message":"93","line":100,"column":4,"nodeType":"94","messageId":"95","endLine":101,"endColumn":1,"fix":"96"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":26,"nodeType":"99","messageId":"100","endLine":3,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":17,"column":29,"nodeType":"99","messageId":"100","endLine":17,"endColumn":52},{"ruleId":"97","severity":1,"message":"98","line":33,"column":29,"nodeType":"99","messageId":"100","endLine":33,"endColumn":50},{"ruleId":"101","severity":1,"message":"102","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":28},{"ruleId":"88","severity":1,"message":"102","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":28},{"ruleId":"101","severity":1,"message":"103","line":1,"column":55,"nodeType":"90","messageId":"91","endLine":1,"endColumn":63},{"ruleId":"88","severity":1,"message":"103","line":1,"column":55,"nodeType":"90","messageId":"91","endLine":1,"endColumn":63},{"ruleId":"101","severity":1,"message":"104","line":12,"column":19,"nodeType":"90","messageId":"91","endLine":12,"endColumn":24},{"ruleId":"88","severity":1,"message":"104","line":12,"column":19,"nodeType":"90","messageId":"91","endLine":12,"endColumn":24},{"ruleId":"97","severity":1,"message":"98","line":9,"column":23,"nodeType":"99","messageId":"100","endLine":9,"endColumn":28},{"ruleId":"92","severity":1,"message":"93","line":37,"column":18,"nodeType":"99","messageId":"95","endLine":38,"endColumn":1,"fix":"105"},{"ruleId":"106","severity":1,"message":"107","line":7,"column":13,"nodeType":"108","messageId":"109","endLine":7,"endColumn":16,"suggestions":"110"},"@typescript-eslint/no-unused-vars","'payload' is defined but never used.","Identifier","unusedVar","comma-dangle","Missing trailing comma.","Property","missing",{"range":"111","text":"112"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","no-unused-vars","'ChangeEvent' is defined but never used.","'useState' is defined but never used.","'error' is assigned a value but never used.",{"range":"113","text":"112"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["114","115"],[2731,2731],",",[1001,1001],{"messageId":"116","fix":"117","desc":"118"},{"messageId":"119","fix":"120","desc":"121"},"suggestUnknown",{"range":"122","text":"123"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"122","text":"124"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[205,208],"unknown","never"]